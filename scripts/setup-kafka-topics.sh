#!/bin/bash

echo "üéØ Configurando t√≥picos Kafka para Queue SDK..."
echo "================================================"

# Verificar se o Kafka est√° rodando
echo "üìã Verificando status do Kafka..."
if ! docker-compose ps kafka | grep -q "Up"; then
    echo "‚ùå Kafka n√£o est√° rodando. Execute 'make dev' primeiro."
    exit 1
fi

echo "‚úÖ Kafka est√° rodando"

# Aguardar Kafka estar totalmente pronto
echo "‚è≥ Aguardando Kafka estar pronto..."
sleep 10

# T√≥pico de teste √∫nico
TOPICS=(
    "test-topic"
)

echo ""
echo "üìù Criando t√≥picos no Kafka..."

for topic in "${TOPICS[@]}"; do
    echo "üîß Criando t√≥pico: ${topic}"

    # Criar t√≥pico com configura√ß√µes otimizadas
    docker-compose exec kafka kafka-topics \
        --create \
        --topic "${topic}" \
        --partitions 3 \
        --replication-factor 1 \
        --config compression.type=snappy \
        --config cleanup.policy=delete \
        --config retention.ms=604800000 \
        --config segment.ms=86400000 \
        --bootstrap-server localhost:9092 \
        --if-not-exists

    if [ $? -eq 0 ]; then
        echo "  ‚úÖ T√≥pico '${topic}' criado com sucesso"
    else
        echo "  ‚ö†Ô∏è T√≥pico '${topic}' j√° existe ou erro na cria√ß√£o"
    fi
done

echo ""
echo "üìä Listando t√≥picos criados..."
docker-compose exec kafka kafka-topics \
    --list \
    --bootstrap-server localhost:9092

echo ""
echo "üîç Detalhes dos t√≥picos..."
for topic in "${TOPICS[@]}"; do
    echo ""
    echo "üìã T√≥pico: ${topic}"
    docker-compose exec kafka kafka-topics \
        --describe \
        --topic "${topic}" \
        --bootstrap-server localhost:9092
done

echo ""
echo "‚úÖ Setup dos t√≥picos Kafka conclu√≠do!"
echo ""
echo "üöÄ Pr√≥ximos passos:"
echo "1. make shell"
echo "2. cd example-project"
echo "3. php producer.php user-created 10 5"
echo "4. php consumer.php user-created simple"
echo ""
echo "üåê Monitorar via Kafka UI: http://localhost:8083"
